<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:DWNavigationPane"
                    xmlns:converter="clr-namespace:DWNavigationPane.Converters"
                    xmlns:ma="http://metro.mahapps.com/winfx/xaml/controls"
                    xmlns:maicons="http://metro.mahapps.com/winfx/xaml/iconpacks">

    <Style TargetType="{x:Type local:PaneIcon}">

        <Style.Resources>
            <ControlTemplate x:Key="Default_Template" TargetType="{x:Type local:PaneIcon}">
                <Border>
                    <maicons:PackIconControl
                        x:Name="PART_Icon"
                        Width="{Binding Path=(local:Element.IconSize), RelativeSource={RelativeSource TemplatedParent}}"
                        Height="{Binding Path=(local:Element.IconSize), RelativeSource={RelativeSource TemplatedParent}}"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Kind="{Binding Path=(local:Item.Icon), RelativeSource={RelativeSource TemplatedParent}}"/>
                </Border>
            </ControlTemplate>
            <ControlTemplate x:Key="IsBadged_Template" TargetType="{x:Type local:PaneIcon}">
                <Border>
                    <ma:Badged
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        RenderTransformOrigin="0.5,0.5"
                        BadgeForeground="White"
                        BadgePlacementMode="BottomRight"
                        Badge="{Binding Path=(local:Item.Badge), RelativeSource={RelativeSource TemplatedParent}}">
                        <ma:Badged.RenderTransform>
                            <ScaleTransform
                                ScaleX="{Binding Path=(local:Element.IconSize), RelativeSource={RelativeSource TemplatedParent}, Converter={converter:ScaleFractionConverter Numerator=1, Denominator=18}}"
                                ScaleY="{Binding Path=(local:Element.IconSize), RelativeSource={RelativeSource TemplatedParent}, Converter={converter:ScaleFractionConverter Numerator=1, Denominator=18}}" />
                        </ma:Badged.RenderTransform>
                        <ma:Badged.BadgeChangedStoryboard>
                            <Storyboard>
                                <DoubleAnimation
                                    Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
                                    From="0.4"
                                    To="0.8"
                                    Duration="0:0:0.3">
                                    <DoubleAnimation.EasingFunction>
                                        <BackEase EasingMode="EaseOut" />
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                                <DoubleAnimation
                                    Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
                                    From="0.4"
                                    To="0.8"
                                    Duration="0:0:0.3">
                                    <DoubleAnimation.EasingFunction>
                                        <BackEase EasingMode="EaseOut" />
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                            </Storyboard>
                        </ma:Badged.BadgeChangedStoryboard>
                        <maicons:PackIconControl
                            Width="18"
                            Height="18"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Kind="{Binding Path=(local:Item.Icon), RelativeSource={RelativeSource TemplatedParent}}"/>
                    </ma:Badged>
                </Border>
            </ControlTemplate>
        </Style.Resources>

        <Setter Property="Height" Value="{Binding Path=(local:Element.IconContainerSize), RelativeSource={RelativeSource Self}}" />
        <Setter Property="Width" Value="{Binding Path=(local:Element.IconContainerSize), RelativeSource={RelativeSource Self}}" />
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="Template" Value="{StaticResource Default_Template}" />

        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=(local:Item.IsBadged), RelativeSource={RelativeSource Self}}" Value="True">
                <Setter Property="Template" Value="{StaticResource IsBadged_Template}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>