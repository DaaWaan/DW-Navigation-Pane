<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converter="clr-namespace:DWNavigationPane.Converters"
    xmlns:local="clr-namespace:DWNavigationPane">

    <Style x:Key="PaneItemBase" TargetType="{x:Type ContentControl}">

        <Setter Property="Height" Value="{Binding Path=(local:Element.IconContainerSize), RelativeSource={RelativeSource Self}}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContentControl}">
                    <Border
                        Background="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}"
                        BorderBrush="{Binding BorderBrush, RelativeSource={RelativeSource TemplatedParent}}"
                        BorderThickness="{Binding BorderThickness, RelativeSource={RelativeSource TemplatedParent}}">
                        <StackPanel Orientation="Horizontal">
                            <local:PaneIcon
                                local:Item.Badge="{Binding Path=(local:Item.Badge), RelativeSource={RelativeSource TemplatedParent}}"
                                local:Item.Icon="{Binding Path=(local:Item.Icon), RelativeSource={RelativeSource TemplatedParent}}"
                                local:Item.IconTemplate="{Binding Path=(local:Item.IconTemplate), RelativeSource={RelativeSource TemplatedParent}}" />
                            <ContentPresenter VerticalAlignment="Center" />
                        </StackPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.5" />
            </Trigger>

            <!--#region Item.Background & Foreground Trigger-->
            <DataTrigger Binding="{Binding Path=(local:Item.Background), RelativeSource={RelativeSource Self}, Converter={converter:IsNullConverter}}" Value="False">
                <Setter Property="Background" Value="{Binding Path=(local:Item.Background), RelativeSource={RelativeSource Self}}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(local:Item.Foreground), RelativeSource={RelativeSource Self}, Converter={converter:IsNullConverter}}" Value="False">
                <Setter Property="Foreground" Value="{Binding Path=(local:Item.Foreground), RelativeSource={RelativeSource Self}}" />
            </DataTrigger>
            <!--#endregion Item.Background & Foreground Trigger-->

            <!--#region Element.Background & Foreground Hover Trigger-->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True" />
                    <Condition Binding="{Binding Path=(local:Element.BackgroundHover), RelativeSource={RelativeSource Self}, Converter={converter:IsNullConverter}}" Value="False" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Background" Value="{Binding Path=(local:Element.BackgroundHover), RelativeSource={RelativeSource Self}}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True" />
                    <Condition Binding="{Binding Path=(local:Element.ForegroundHover), RelativeSource={RelativeSource Self}, Converter={converter:IsNullConverter}}" Value="False" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Foreground" Value="{Binding Path=(local:Element.ForegroundHover), RelativeSource={RelativeSource Self}}" />
            </MultiDataTrigger>
            <!--#endregion Element.Background & Foreground Hover Trigger-->

            <!--#region Control Template Triggers-->
            <DataTrigger Binding="{Binding Path=(local:Item.IconTemplate), RelativeSource={RelativeSource Self}}" Value="{x:Static local:ItemTemplate.IconOnly}">
                <Setter Property="Width" Value="{Binding Path=(local:Element.IconContainerSize), RelativeSource={RelativeSource Self}}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type local:PaneItem}">
                            <Border
                                Background="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}"
                                BorderBrush="{Binding BorderBrush, RelativeSource={RelativeSource TemplatedParent}}"
                                BorderThickness="{Binding BorderThickness, RelativeSource={RelativeSource TemplatedParent}}">
                                <local:PaneIcon
                                    local:Item.Badge="{Binding Path=(local:Item.Badge), RelativeSource={RelativeSource TemplatedParent}}"
                                    local:Item.Icon="{Binding Path=(local:Item.Icon), RelativeSource={RelativeSource TemplatedParent}}"
                                    local:Item.IconTemplate="{Binding Path=(local:Item.IconTemplate), RelativeSource={RelativeSource TemplatedParent}}" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>

            <DataTrigger Binding="{Binding Path=(local:Item.IconTemplate), RelativeSource={RelativeSource Self}}" Value="{x:Static local:ItemTemplate.ContentOnly}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type local:PaneItem}">
                            <Border
                                Background="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}"
                                BorderBrush="{Binding BorderBrush, RelativeSource={RelativeSource TemplatedParent}}"
                                BorderThickness="{Binding BorderThickness, RelativeSource={RelativeSource TemplatedParent}}">
                                <ContentPresenter VerticalAlignment="Center" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <!--#endregion Control Template Triggers-->
        </Style.Triggers>
    </Style>
</ResourceDictionary>